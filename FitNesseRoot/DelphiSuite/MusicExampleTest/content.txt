!path c:\Source\fit4delphi\bin\*.bpl
!define COMMAND_PATTERN {c:\Source\fit4delphi\bin\FitServer.exe -v %p}

*Browsing Music*

The music browser starts up looking at the whole library of songs. We specify the library (an advanced feature) so that we know what we are talking about in this document.
!| TActionFixture |
| start | TBrowser | |
| enter | load library | c:\Source\fit4delphi\eg\music\Music.txt |
| check | total songs | 37 |
_This is a the file that library reads. It is tab separated text. Try downloading it and looking at it with a spreadsheet._ http:Release/Source/eg/music/Music.txt
\\

We can pick songs and see details of our selection as we go.

!| fit.ActionFixture |
| enter | select | 1 |
| check | title | Akila |
| check | artist | Toure Kunda |
| enter | select | 2 |
| check | title | American Tango |
| check | artist | Weather Report |
| check | album | Mysterious Traveller |
| check | year | 1974 |
| check | time | 3.70 |
| check | track | 2 of 7 |

_ActionFixture interprets the words in the first column. The actions operate on fields and buttons on the_ Browser{_}screen we started in the first table. The Browser (or what ever other Fixtures we start) interprets the names in the second column. Each name maps to a method of the Browser. The third column provides data that are pass as arguments to Browser methods or compared with Browser method results. See MusicExampleWithErrors to see how errors are reported._

----\\

*Playing Music*

Once we've picked a song, we can play it. We can continue operating the Brower while music is playing. Since this sequence is long, we'll explain what we are doing in an unused column.

!| TRealtime |
| press | play | | play this song |
| check | status | loading | |
| pause | 2 | | |
| check | status | loading | watch it load |
| pause | 2 | | |
| check | status | playing | |
| check | playing | American Tango | |
| check | time | 3.70 | |
| press | pause | | make it stop |
| check | status | pause | |
| check | remaining | 3.66 | |
| pause | 60 | | |
| check | remaining | 3.66 | |
| press | play | | make it go |
| check | status | playing | |
| pause | 60 | | |
| check | remaining | 2.66 | |
| await | play complete | | enjoy the music |
| check | status | ready | |
| enter | select | 4 | try another |
| press | play | | |
| pause | 1 | | |
| fail | load jam | | uh oh |
| check | message | load jamed | |
| press | ok | | dispatch the notifier |
| check | status | ready | |

_This table is interpreted by Realtime, a Fixture that adds actions having to do with realtime operation of the music player. This fixture calls on a simulator to keep track of system events. We do so here only because the application we are testing isn't a real music player. Our toy application cooperates with the simulator to keep track of time. A real player would do things that take real time and it would use the computer's realtime clock to keep track of time. We could still use a fixture with actions like_ pause _and_ await _but there wouldn't need to be a simulator too._

*Searching for Music*

There are buttons on the browser to find more songs like the one we have picked.

!| TRealtime |
| enter | select | 2 | pick an album |
| press | same album | | find more like it |
| check | status | searching | |
| await | search complete | | |
| check | status | ready | |
| check | selected songs | 2 | |

_Our searches take a few seconds to complete. Eventually we will want to try mashing buttons faster than the computer can respond. For now we will be polite and_ await _completion of our searches._

The selected songs are displayed in a table.

!| TDisplay |
| title | artist | album | year | time() | track() |
| Scarlet Woman | Weather Report | Mysterious Traveller | 1974 | 5.72 | 6 of 7 |
| American Tango | Weather Report | Mysterious Traveller | 1974 | 3.70 | 2 of 7 |

_Here we use Display (a_ RowFixture_) to directly examine the Music object found by our search. Things like_ artist _and_ track() _are fields and methods of the domain objects._


We can find songs related in different ways. Each new way produces a (possibly) different list of songs. _Show all_ restores the display to the initial conditions.

!| TRealtime |
| press | show all | | recall all the songs |
| await | search complete | | |
| check | selected songs | 37 | |
| enter | select | 3 | pick a James Taylor song |
| check | artist | James Taylor | |
| press | same artist | | find more by him |
| await | search complete | | |
| check | selected songs | 5 | |

Yielding the display:

!| TDisplay |
| title | artist | album | year | time() | track() |
| Handy Man | James Taylor | JT | 1977 | 3.30 | 7 of 12 |
| Sailing To Philadelphia | James Taylor | October Rose | 2001 | 5.47 | 3 of 3 |
| Ananas | James Taylor | Hourglass | 1997 | 5.73 | 5 of 13 |
| Another Grey Morning | James Taylor | JT | 1977 | 2.73 | 4 of 12 |
| Copperline | James Taylor | New Moon Shine | 1991 | 4.37 | 1 of 12 |

_Domain objects typically have lots more fields and methods than we can conveniently look at in a single table. We compose a table specific to our needs by choosing column headings of interest. Here is another look at the results of the previous search._

!| TDisplay |
| title | album | genre | size | date |
| Another Grey Morning | JT | Pop | 3284199 | 9/7/02 11:32 PM |
| Ananas | Hourglass | Pop | 6897450 | 9/7/02 11:47 PM |
| Handy Man | JT | Pop | 3976956 | 9/7/02 11:36 PM |
| Sailing To Philadelphia | October Rose | Pop | 6581911 | 9/7/02 10:45 PM |
| Sailing To Philadelphia | October Rose | Pop | 6581911 | 9/7/02 10:45 PM |
| Handy Man | XJT | Pop | 3976956 | 9/7/02 11:36 PM |

_Notice that the songs in the two tables are not in the same order. That is because we didn't type the tables in the same order, and the order we type is preserved._ RowFixture_(s) use the left hand columns to line up the search results with the table values.  Check out_ MusicExampleWithErrors _to see how this works when the rows don't match up._

_The kaffe jvm/library has trouble with date formatting so you may see errors when running this from wiki._

_This completes the_ MusicExample_._

----
We've run quite a few test. We'll call up one more Fixture that will add a summary to the end of our document.

| TSummaryFixture |
